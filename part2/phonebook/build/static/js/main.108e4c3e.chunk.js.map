{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","DisplayPersons","searchName","persons","deletePerson","map","person","name","number","filter","toUpperCase","includes","DeleteButton","onClick","Filter","handleSearchChange","value","onChange","Form","handleSubmit","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setSearchName","setMessage","useEffect","personService","initialPersons","console","log","event","target","preventDefault","matchedPerson","find","p","personObject","window","confirm","returnedPerson","setTimeout","catch","error","status","JSON","stringify","concat","matchedPersonName","returned","note","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.108e4c3e.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n// const getAll2 = () => {\r\n//   const request = axios.get(baseUrl)\r\n//   const nonExisting = {\r\n//     id: 10000,\r\n//     content: 'This note is not saved to server',\r\n//     date: '2019-05-30T17:30:31.098Z',\r\n//     important: true,\r\n//   }\r\n//   return request.then(response => response.data.concat(nonExisting))\r\n// }\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response)\r\n}\r\n\r\nexport default { \r\n  getAll, create, update, remove\r\n}","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\n\r\n\r\nconst DisplayPersons = ({searchName, persons, deletePerson}) => (searchName === '') ?\r\n    <ul>\r\n      {persons.map(person => <li key={person.id}>{person.name}, {person.number} <DeleteButton deletePerson={deletePerson} id={person.id}/></li>)}\r\n    </ul>\r\n    : \r\n    <ul>\r\n      {persons.filter(person => person.name.toUpperCase().includes(searchName.toUpperCase()))\r\n        .map(person => <li key={person.id}>{person.name}, {person.number} <DeleteButton deletePerson={deletePerson} id={person.id}/></li>)}\r\n    </ul>\r\n\r\nconst DeleteButton = ({deletePerson, id}) => {\r\n  return (\r\n    <button onClick={() => deletePerson(id)}>\r\n      delete\r\n    </button>\r\n  )\r\n}\r\n\r\nconst Filter = ({searchName, handleSearchChange}) => {\r\n  return (\r\n  <p>filter shown with \r\n    <input value={searchName} onChange={handleSearchChange}/>\r\n  </p>\r\n  )\r\n}\r\n\r\nconst Form = ({handleSubmit, newName, newNumber,handleNameChange, handleNumberChange}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* <div> debug: {newName}, {newNumber}</div> */}\r\n      <div> name: <input value={newName} onChange={handleNameChange}/></div>\r\n      <div> number: <input value={newNumber} onChange={handleNumberChange}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst Notification = ({message}) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"msg\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([''])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ searchName, setSearchName ] = useState('')\r\n  const [ message, setMessage ] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    // console.log('effect')\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n        console.log('initial promise fulfilled')\r\n      })\r\n    // axios\r\n    //   .get('http://localhost:3001/persons')\r\n    //   .then(response => {\r\n    //     console.log('promise fulfilled')\r\n    //     setPersons(response.data)\r\n    //   })\r\n  }, [])\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchName(event.target.value)\r\n  }\r\n\r\n  const deletePerson = (id) => {\r\n    console.log(`deletePerson function triggered in App component`)\r\n    console.log(id)\r\n    const matchedPersonName = persons.find(person => person.id === id).name\r\n\r\n    if(window.confirm(`Delete ${matchedPersonName}?`)) {    \r\n      personService\r\n        .remove(id)\r\n        .then(returned =>{\r\n          console.log(returned)\r\n          setPersons(persons.filter(note => note.id !== id))\r\n          setMessage(`${matchedPersonName} successfully deleted`)\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 3000)\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    \r\n    const matchedPerson = persons.find(p => p.name === newName)\r\n    \r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    if (!matchedPerson){\r\n      personService\r\n        .create(personObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setMessage(`${returnedPerson.name} successfully added`)\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 3000)\r\n        })\r\n        .catch(error =>{\r\n          console.log(error.response.data)\r\n          setMessage(`Validation failed: ${JSON.stringify(error.response.data)}`)\r\n        })\r\n    } else if (window.confirm(`${newName} is already added. Replace old number with new one?`)) {\r\n      // const person = persons.find(p => p.name === newName)\r\n      // const changedPerson = {...person, number: newNumber}\r\n      personService\r\n        .update(matchedPerson.id, personObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.map(p => p.name !== newName ? p : returnedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setMessage(`${returnedPerson.name} number changed to ${newNumber}`)\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 3000)\r\n        })\r\n        .catch(error => {\r\n          if (error.response.status === 400) {\r\n            setMessage(`Validation failed: ${JSON.stringify(error.response.data)}`)\r\n          } else {\r\n            setMessage(`Information of ${matchedPerson.name} has already been removed from server`)\r\n          }\r\n        })\r\n    }\r\n    // if (!persons.map(person => person.name).includes(newName)) {\r\n    //   const nameObject = {\r\n    //     name: newName,\r\n    //     number: newNumber\r\n    //   }\r\n    // setPersons(persons.concat(nameObject))\r\n    // setNewName('')\r\n    // setNewNumber('')\r\n    // } else {\r\n    // alert(`${newName} is already added to phonebook`)\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message}/>\r\n      <Filter searchName={searchName} handleSearchChange={handleSearchChange}/>\r\n      <h2>add new entries</h2>\r\n      <Form handleSubmit={handleSubmit} newName={newName} newNumber={newNumber} \r\n      handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}/>\r\n      <h2>Numbers</h2>\r\n      <DisplayPersons searchName={searchName} persons={persons} deletePerson={deletePerson}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\nimport './index.css'\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}